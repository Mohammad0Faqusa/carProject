// Define the pins for motor control
const int motor1Pin1 = 4;  // Motor 1 terminal 1
const int motor1Pin2 = 5;  // Motor 1 terminal 2
const int motor2Pin1 = 6;  // Motor 2 terminal 1
const int motor2Pin2 = 7;  // Motor 2 terminal 2
const int enable1 = 9 ; 
const int enable2 = 3 ; 
int pwm = 0   ; 
void setup() {
  // Set motor control pins as outputs
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(motor2Pin1, OUTPUT);
  pinMode(motor2Pin2, OUTPUT);
  pinMode(enable1 , OUTPUT) ; 
  pinMode(enable2, OUTPUT) ; 
  
  // Initialize Serial communication
  Serial.begin(9600);
}
char previousCharacter = ' ' ; 
void loop() {
  digitalWrite(enable1, HIGH) ; 
  digitalWrite(enable2, HIGH) ; 
  
  if (Serial.available() > 0) {
    char command = Serial.read();
    Serial.println(command) ; 
    Serial.println(pwm) ; 
    executeCommand(command);
    if (command == 'B' or command == 'F') { // when switch case from forward to backward or reverse vica , will not switch at the same speed 
    previousCharacter = command ; }
  }
}

void executeCommand(char command) {
  switch (command) {
    case 'F':
      forward();
      if (previousCharacter == 'B') {
        pwm = 0 ;
      }
      if (pwm < 250) {
      pwm = pwm + 5 ; }
      previousCharacter = 'F';
      break;
      
    case 'B':
      backward();
      if (previousCharacter == 'F') {
        pwm = 0 ;
      }
      if (pwm < 250) {
      pwm = pwm + 5 ; } 
      previousCharacter = 'B';
      break;
      
    case 'R':
      right();
      break;
      
    case 'L':
      left();
      break;
      
    case 'S':
      stop();
      pwm = 0 ; 
      break;
      
    case 'G' : 
      forwardLeft() ; 
      if (previousCharacter == 'B') {
        pwm = 0 ;
      }
      if (pwm < 250) {
      pwm = pwm + 5 ; } 
      previousCharacter = 'F';
      break; 
      
    case 'I' : 
      forwardRight() ; 
      if (previousCharacter == 'B') {
        pwm = 0 ;
      }
      if (pwm < 250) {
      pwm = pwm + 5 ; }
      previousCharacter = 'F';
      break ; 
      
    case 'H' : 
      if (previousCharacter == 'F') {
        pwm = 0 ;
      }
      backLeft() ; 
      if (pwm < 250) {
      pwm = pwm + 5 ; } 
      previousCharacter = 'B';
      break ; 
      
    case 'J' : 
      if (previousCharacter == 'F') {
        pwm = 0 ;
      }
      backRight() ; 
      if (pwm < 250) {
      pwm = pwm + 5 ; }
      previousCharacter = 'B';
      break ; 
     
     
    default:
      // Invalid command received
      Serial.println("Invalid command!");
  }
}

void forward() {
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
  analogWrite(enable1 , pwm) ; 
}

void backward() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
  analogWrite(enable1 , pwm) ; 

}

void right() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
}

void left() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
}

void forwardLeft() { 
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
  analogWrite(enable1 , pwm) ; 
}

void forwardRight() { 
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
  analogWrite(enable1 , pwm) ; 
}
void backLeft() { 
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
  analogWrite(enable1 , pwm) ; 
}
void backRight() { 
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
  analogWrite(enable1 , pwm) ; 
}
void stop() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
}
